const char *SOURCE_RAYS_FRAGMENT =

"uniform float u_Time;\n"
"uniform vec2 u_Resolution;\n"

"float rayStrength(vec2 raySource, vec2 rayRefDirection, vec2 coord, float seedA, float seedB, float speed)\n"
"{\n"
"	vec2 sourceToCoord = coord - raySource;\n"
"	float cosAngle = dot(normalize(sourceToCoord), rayRefDirection);\n"
"	\n"
"	return clamp(\n"
"		(0.45 + 0.15 * sin(cosAngle * seedA + u_Time * speed)) +\n"
"		(0.3 + 0.2 * cos(-cosAngle * seedB + u_Time * speed)),\n"
"		0.0, 1.0) *\n"
"		clamp((u_Resolution.x - length(sourceToCoord)) / u_Resolution.x, 0.0, 1.0);\n"
"}\n"

"void main() \n"
"{\n"
"	vec2 uv = gl_FragCoord.xy / u_Resolution.xy;\n"
"	uv.y = 1.0 - uv.y;\n"
"	vec2 coord = vec2(gl_FragCoord.x, u_Resolution.y - gl_FragCoord.y);\n"
"	\n"
"	\n"
"	\n"
"	vec2 rayPos1 = vec2(u_Resolution.x* 0.7, u_Resolution.y * -0.4);\n"
"	vec2 rayRefDir1 = normalize(vec2(1.0, -0.116));\n"
"	float raySeedA1 = 36.2214;\n"
"	float raySeedB1 = 21.11349;\n"
"	float raySpeed1 = 1.5;\n"
"	\n"
"	vec2 rayPos2 = vec2(u_Resolution.x * 0.8, u_Resolution.y * -0.6);\n"
"	vec2 rayRefDir2 = normalize(vec2(1.0, 0.241));\n"
"	const float raySeedA2 = 22.39910;\n"
"	const float raySeedB2 = 18.0234;\n"
"	const float raySpeed2 = 1.1;\n"
"	\n"
"	\n"
"	vec4 rays1 =\n"
"		vec4(1.0, 1.0, 1.0, 1.0) *\n"
"		rayStrength(rayPos1, rayRefDir1, coord, raySeedA1, raySeedB1, raySpeed1) * 0.4;\n"
"	 \n"
"	vec4 rays2 =\n"
"		vec4(1.0, 1.0, 1.0, 1.0) *\n"
"		rayStrength(rayPos2, rayRefDir2, coord, raySeedA2, raySeedB2, raySpeed2) * 0.4;\n"
"	\n"
"	 vec4 EndColor = rays1 + rays2;\n"
"    //EndColor.a += 1.0;\n"
"	gl_FragColor = EndColor;\n"
"}\n";